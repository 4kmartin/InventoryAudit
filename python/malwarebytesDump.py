from requests_oauthlib import OAuth2Session
from oauthlib.oauth2 import BackendApplicationClient


class NebulaAsset:

	def __init__(self,hostname:str, fqdn:str, ip:str, mac:str) -> NebulaAsset:
		self.hostname=hostname
		self.fqdn=fqdn
		self.ip=ip
		self.mac=mac


def nebula_url (path:str) -> str:
	return f"https://api.malwarebytes.com{path}"

def get_nebula_client (client_id:str, client_secret:str, account_id:str):
	client_scope = ["read", "write"]
	headers = {"accountid": account_id}

	client = BackendApplicationClient(client_id, scope=client_scope)
	nebula = OAuth2Session(client=client, scope=client_scope)
	nebula.headers.update(headers)
	token = nebula.fetch_token(
		token_url=nebula_url("/oauth2/token"),
		client_secret=client_secret,
		scope=" ".join(client_scope))
	return nebula
	
def get_endpoints_in_group (group:str, client:OAuth2Session) -> list[str]:
	machine_ids = []
	payload = {"group_name.keyword":group}
	response = client.post(nebula_url("/nebula/v1/endpoints"),data=payload)
	for i in response.json()["endpoints"]:
		machine_ids.append(i["agent"]["machine_id"])
	return machine_ids
